<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.berg.base.xmlmappers.discriminator.mapper.StudentMapper">

    <!-- 表名 -->
    <sql id="TableName">
        student
    </sql>

    <!-- 基本resultMap -->
    <resultMap id="BaseResultMap" type="com.berg.base.xmlmappers.discriminator.dto.BaseStudent">
        <id column="STUDENT_ID" property="studentId" jdbcType="BIGINT"/>
        <result column="DEPARTMENT_ID" property="departmentId" jdbcType="BIGINT"/>
        <result column="NUMBER" property="number" jdbcType="VARCHAR"/>
        <result column="NAME" property="name" jdbcType="VARCHAR"/>
        <result column="BIRTHDAY" property="birthday" jdbcType="DATE"/>
        <result column="SEX" property="sex" jdbcType="INTEGER"/>
    </resultMap>


    <!-- 使用select的resultMap -->
    <resultMap id="BySelectResultMap" type="com.berg.base.xmlmappers.discriminator.dto.BaseStudent"
               extends="BaseResultMap">

        <discriminator column="sex" javaType="int" jdbcType="INTEGER">
            <case value="1" resultMap="BySelectMaleResultMap"/>
            <case value="2" resultMap="BySelectFemaleResultMap"/>
        </discriminator>
    </resultMap>

    <!-- 使用select方式的男学生resultMap -->
    <resultMap id="BySelectMaleResultMap" type="com.berg.base.xmlmappers.discriminator.dto.MaleStudent"
               extends="BaseResultMap">

        <collection property="maleAttrList" column="student_id"
                    select="com.berg.base.xmlmappers.discriminator.mapper.MaleAttrMapper.fineMore"/>
    </resultMap>

    <!-- 使用select方式的女学生resultMap -->
    <resultMap id="BySelectFemaleResultMap" type="com.berg.base.xmlmappers.discriminator.dto.FemaleStudent"
               extends="BaseResultMap">

        <collection property="femaleAttrList" column="student_id"
                    select="com.berg.base.xmlmappers.discriminator.mapper.FemaleAttrMapper.fineMore"/>
    </resultMap>


    <!-- 使用resultMap的resultMap -->
    <resultMap id="ByResultMapResultMap" type="com.berg.base.xmlmappers.discriminator.dto.BaseStudent"
               extends="BaseResultMap">

        <discriminator column="sex" javaType="int" jdbcType="INTEGER">
            <case value="1" resultMap="ByResultMapMaleResultMap"/>
            <case value="2" resultMap="ByResultMapFemaleResultMap"/>
        </discriminator>
    </resultMap>

    <!-- 使用resultMap方式的男学生resultMap -->
    <resultMap id="ByResultMapMaleResultMap" type="com.berg.base.xmlmappers.discriminator.dto.MaleStudent"
               extends="BaseResultMap">

        <collection property="maleAttrList" column="student_id" columnPrefix="ma"
                    resultMap="com.berg.base.xmlmappers.discriminator.mapper.MaleAttrMapper.BaseResultMap"/>
    </resultMap>

    <!-- 使用resultMap方式的女学生resultMap -->
    <resultMap id="ByResultMapFemaleResultMap" type="com.berg.base.xmlmappers.discriminator.dto.FemaleStudent"
               extends="BaseResultMap">

        <collection property="femaleAttrList" column="student_id" columnPrefix="fa"
                    resultMap="com.berg.base.xmlmappers.discriminator.mapper.FemaleAttrMapper.BaseResultMap"/>
    </resultMap>

    <!-- 基本sql字段 -->
    <sql id="BaseSql">
        ${prefix}.STUDENT_ID       ${suffix}STUDENT_ID,
        ${prefix}.DEPARTMENT_ID    ${suffix}DEPARTMENT_ID,
        ${prefix}.NUMBER           ${suffix}NUMBER,
        ${prefix}.NAME             ${suffix}NAME,
        ${prefix}.BIRTHDAY         ${suffix}BIRTHDAY,
        ${prefix}.SEX              ${suffix}SEX
    </sql>

    <!-- 基本条件 -->
    <sql id="BaseCondition">
        <if test="studentId!=null and studentId!=0">
            AND ${prefix}.STUDENT_ID = #{studentId}
        </if>
        <if test="departmentId!=null and departmentId!=0">
            AND ${prefix}.DEPARTMENT_ID = #{departmentId}
        </if>
        <if test="number!=null and !number.equals('')">
            AND ${prefix}.NUMBER like CONCAT('%', CONCAT(#{number, jdbcType=VARCHAR}, '%'))
        </if>
        <if test="name!=null and !name.equals('')">
            AND ${prefix}.NAME like CONCAT('%', CONCAT(#{name, jdbcType=VARCHAR}, '%'))
        </if>
        <if test="sex!=null and sex!=0">
            AND ${prefix}.SEX = #{sex}
        </if>
    </sql>

    <!-- 条件查询 -->
    <select id="selectDiscriminatorBySelect" parameterType="com.berg.base.xmlmappers.discriminator.dto.BaseStudent"
            resultMap="BySelectResultMap">
        SELECT
            <include refid="BaseSql">
                <property name="prefix" value="s"/>
                <property name="suffix" value=" "/>
            </include>
        FROM <include refid="TableName"/> s

        <trim prefix="WHERE" prefixOverrides="AND |OR ">
            <include refid="BaseCondition">
                <property name="prefix" value="s"/>
            </include>
        </trim>
    </select>

    <!-- 条件查询 -->
    <select id="selectDiscriminatorByResultMap" parameterType="com.berg.base.xmlmappers.discriminator.dto.BaseStudent"
            resultMap="ByResultMapResultMap">
        SELECT
            <include refid="BaseSql">
                <property name="prefix" value="s"/>
                <property name="suffix" value=" "/>
            </include>,
            <include refid="com.berg.base.xmlmappers.discriminator.mapper.MaleAttrMapper.BaseSql">
                <property name="prefix" value="ma"/>
                <property name="suffix" value="ma"/>
            </include>,
            <include refid="com.berg.base.xmlmappers.discriminator.mapper.FemaleAttrMapper.BaseSql">
                <property name="prefix" value="fa"/>
                <property name="suffix" value="fa"/>
            </include>
        FROM <include refid="TableName"/> s
        LEFT JOIN <include refid="com.berg.base.xmlmappers.discriminator.mapper.MaleAttrMapper.TableName"/> ma
        ON s.STUDENT_ID = ma.STUDENT_ID
        LEFT JOIN <include refid="com.berg.base.xmlmappers.discriminator.mapper.FemaleAttrMapper.TableName"/> fa
        ON s.STUDENT_ID = fa.STUDENT_ID

        <trim prefix="WHERE" prefixOverrides="AND |OR ">
            <include refid="BaseCondition">
                <property name="prefix" value="s"/>
            </include>
        </trim>
    </select>
</mapper>